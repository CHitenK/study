{"version":3,"sources":["views/props/index.js","views/page/index.js","views/state/index.js","views/event/index.js","views/list/index.js","views/if/index.js","route/index.js","views/className/index.js","views/lifeCycle/index.js","App.js","serviceWorker.js","index.js"],"names":["Props","props","state","name","age","this","onClick","handleEvent","React","Component","Page1","data","console","log","key","key1","key2","State","pp","setState","setTimeout","changeState","Eventt","style","window","location","href","handleClick","bind","List","listData","map","item","i","If","kl","router","path","component","Page","className","color","nextPro","nextProps","nextState","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6922aad4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Props extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: 'cmk',\r\n      age: 159\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/*props 传值*/}\r\n        <p>{this.props.name}</p>\r\n        {/* 父子组件 传值*/}\r\n        <p onClick={() => this.props.handleEvent(123)}>{this.props.age}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Props","import React from 'react'\r\nimport Props from './../props/index'\r\nclass Page1 extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  // 处理子组件向父组件传值\r\n  handleEvent(data) {\r\n    console.log(data)\r\n  }\r\n  render() {\r\n    const props = {\r\n      key: 1,\r\n      key1: 56,\r\n      key2: 69\r\n    }\r\n    return (\r\n      <div>\r\n        page\r\n        <Props name='cmk' age='5668' {...props} handleEvent={this.handleEvent} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Page1","import React from 'react'\r\n// 状态值 state\r\nclass State extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { // 声明state \r\n      name: '张三',\r\n      age: 12\r\n    }\r\n    this.pp = 'sddd'\r\n  }\r\n  changeState() {\r\n    this.setState({ // 修改state\r\n      name: '李四',\r\n      age: 22\r\n    })\r\n    this.pp = '1444'\r\n    console.log(this.pp)\r\n  }\r\n  render() {\r\n    setTimeout(() => {\r\n      this.changeState()\r\n    }, 4000)\r\n    return (\r\n      <div>{this.state.name} {this.state.age}</div>\r\n    )\r\n  }\r\n}\r\nexport default State","import React from 'react'\r\n\r\n// 事件\r\nclass Eventt extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: 'Name',\r\n      age: 45,\r\n      style: {}\r\n    }\r\n  }\r\n  // 点击函数\r\n  handleClick(name, age) {\r\n    this.setState({\r\n      name: name || 'Name',\r\n      age: age || 69\r\n    })\r\n    window.location.href = '/if'\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={this.state.style}>\r\n        {/* 处理点击函数 方法一*/}\r\n        <button onClick={this.handleClick.bind(this, 'ck',45  )}> {this.state.name}</button>\r\n        {/* 处理点击函数 方法二*/}\r\n        <button onClick={() => this.handleClick('mk', 56) }> {this.state.age}</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Eventt","import React from 'react'\r\n// 列表渲染\r\nclass List extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n    this.listData = [\r\n      { name: 'ckk', age: 122 },\r\n      { name: 'ckk1', age: 132 },\r\n      { name: 'ckk2', age: 162 },\r\n      { name: 'ckk3', age: 172 },\r\n      { name: 'ckk4', age: 192 },\r\n      { name: 'ckk5', age: 182 }\r\n    ]\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.listData.map((item, i) => {\r\n            return <p key={i}>{item.name} {item.age}</p>\r\n          })\r\n        }\r\n        <div>4566</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default List","import React from 'react'\r\n\r\nclass If extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      kl: true\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.kl &&\r\n           <p>4555</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default If","\r\nimport Page from './../views/page/index'\r\nimport State from './../views/state/index'\r\nimport Eventt from './../views/event/index'\r\nimport List from './../views/list/index'\r\nimport If from './../views/if/index'\r\nimport ClassName from './../views/className/index'\r\nimport LifeCycle from './../views/lifeCycle/index'\r\nconst router = [\r\n  {\r\n    path: \"/page\",\r\n    component: Page\r\n  },\r\n  {\r\n    path: \"/state\",\r\n    component: State\r\n  },\r\n  {\r\n    path: \"/event\",\r\n    component: Eventt\r\n  },\r\n  {\r\n    path: \"/list\",\r\n    component: List\r\n  },\r\n  {\r\n    path: \"/if\",\r\n    component: If\r\n  },\r\n  {\r\n    path: \"/className\",\r\n    component: ClassName\r\n  },\r\n  {\r\n    path: \"/lifeCycle\",\r\n    component: LifeCycle\r\n  },\r\n]\r\n\r\nexport default router","import React from 'react'\r\nimport './index.css'\r\n// 类名称 还有 style \r\nclass ClassName extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      className: 'red',\r\n      style: {}\r\n    }\r\n  }\r\n  render() {\r\n    setTimeout(() => {\r\n       this.setState({\r\n        className: 'kk',\r\n        style: { color: 'blue' }\r\n       })\r\n    }, 5000)\r\n    return (\r\n      <div className={this.state.className}  style={this.state.style}>ffffsfs</div>\r\n    )\r\n  }\r\n}\r\nexport default ClassName","import React from 'react'\r\n\r\n// 生命周期\r\nclass LifeCycle extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: 'cmk'\r\n    }\r\n  }\r\n  /**\r\n   * 装载组件触发\r\n   * 只会在装载之前调用一次，在 render 之前调用，你可以在这个方法里面调用 setState 改变状态，并且不会导致额外调用一次 render\r\n   */\r\n  componentWillMount() {\r\n    console.log('装载组件触发')\r\n  }\r\n  /**\r\n   * 装载完成之后调用\r\n   * 只会在装载完成之后调用一次，在 render 之后调用，从这里开始可以通过 ReactDOM.findDOMNode(this) 获取到组件的 DOM 节点。\r\n   */\r\n  componentDidMount() {\r\n    console.log('装载完成之后调用')\r\n  }\r\n  /**\r\n   * 当props 修改时触发\r\n   * @param {Object} nextPro  修改后的props 数据\r\n   */\r\n  componentWillReceiveProps(nextPro) {\r\n    console.log(nextPro)\r\n  }\r\n  /**\r\n   * 修改state时触发\r\n   * @param {Object} nextProps \r\n   * @param {Object} nextState \r\n   */\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    console.log(nextProps, 15)\r\n    console.log(nextState, 69)\r\n    return true\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        生命周期\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default LifeCycle","import React from 'react';\nimport './App.css';\nimport {  Route } from 'react-router-dom'\nimport router from './route/index'\n\nfunction App() {\n  console.log(router)\n  return (\n    <div className=\"App\">\n       {\n         router.map((item, i) => {\n           return <Route key={i} path={item.path} component={item.component}  />\n         })\n       }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router><App /></Router>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}